from aiogram import Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.utils.markdown import hbold
from datetime import datetime

from config import load_config
from database.methods import get_or_create_user, get_user_purchases
from keyboards.keyboards import get_main_keyboard, get_profile_keyboard, get_support_keyboard
from handlers.catalog import cmd_catalog
from handlers.profile import show_purchases, show_balance
from handlers.admin import cmd_admin

# Load config to get admin IDs and contact
config = load_config()
ADMIN_IDS = config.admin_ids
ADMIN_CONTACT = config.admin_contact


async def cmd_start(message: Message):
    """Handle /start command"""
    # Get user data for the database
    user_data = {
        'username': message.from_user.username,
        'first_name': message.from_user.first_name,
        'last_name': message.from_user.last_name
    }

    # Save or update user in the database
    user = await get_or_create_user(message.from_user.id, user_data)

    # Welcome message
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {hbold(message.from_user.first_name)}! üëã\n\n"
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        f"‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ üìö\n"
        f"‚Ä¢ –ü–æ–∫—É–ø–∞—Ç—å —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã üí∏\n"
        f"‚Ä¢ –°–∫–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –ø–æ–∫—É–ø–∫–∏ üìÅ\n\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"
    )

    # Send welcome message with main keyboard (including admin button if user is admin)
    await message.answer(welcome_text, reply_markup=get_main_keyboard(message.from_user.id))


async def cmd_help(message: Message):
    """Handle /help command"""
    help_text = (
        f"üìö {hbold('–ü–æ–º–æ—â—å –∏ –∫–æ–º–∞–Ω–¥—ã')}:\n\n"
        f"/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        f"/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏\n"
        f"/catalog - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–∏ —Ç–æ–≤–∞—Ä—ã\n"
        f"/profile - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n"
        f"/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å\n"
        f"/purchases - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –ø–æ–∫—É–ø–∫–∏\n"
        f"/support - –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n"
    )

    # Add admin commands if user is admin
    if message.from_user.id in ADMIN_IDS:
        help_text += (
            f"\n{hbold('‚úÖ –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')}:\n"
            f"/admin - –î–æ—Å—Ç—É–ø –∫ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        )

    help_text += "\n–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏!"

    await message.answer(help_text)


async def cmd_purchases(message: Message):
    """Handle /purchases command"""
    await show_purchases(message)


async def cmd_support(message: Message):
    """Handle /support command and Support button"""
    support_text = (
        f"üìû {hbold('–¶–µ–Ω—Ç—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏')}\n\n"
        f"–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ú—ã –∑–¥–µ—Å—å –¥–ª—è –≤–∞—Å! –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º:\n\n"
        f"ü§ñ {hbold('–í–æ–ø—Ä–æ—Å—ã –ø–æ –±–æ—Ç—É')}\n"
        f"–õ—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–π\n\n"
        f"üíª {hbold('–í–æ–ø—Ä–æ—Å—ã –ø–æ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∫–æ–¥—É')}\n"
        f"–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞\n\n"
        f"üõí {hbold('–ü–æ–∫—É–ø–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞')}\n"
        f"–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å –ø–æ–ª—É—á–µ–Ω–∏–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞\n\n"
        f"üí∞ {hbold('–ü—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π')}\n"
        f"–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏ –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º –±–∞–ª–∞–Ω—Å–∞\n\n"
        f"‚ùì {hbold('–î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã')}\n"
        f"–õ—é–±—ã–µ –¥—Ä—É–≥–∏–µ –∑–∞–ø—Ä–æ—Å—ã, –Ω–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤—ã—à–µ\n\n"
        f"–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
    )

    await message.answer(
        support_text,
        reply_markup=get_support_keyboard(ADMIN_CONTACT)
    )


async def handle_inline_buttons(callback: CallbackQuery):
    """Handle common inline keyboard buttons"""
    action = callback.data

    if action == "back_to_menu":
        await callback.message.answer(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=get_main_keyboard(callback.from_user.id)
        )
    elif action == "my_purchases":
        await show_purchases(callback.message)
    elif action == "show_balance":
        await show_balance(callback.message)
    elif action == "open_catalog":
        await cmd_catalog(callback.message)
    elif action == "back_to_categories":
        await cmd_catalog(callback.message)

    await callback.answer()


async def handle_admin_button(message: Message):
    """Handle the Admin Panel button"""
    await cmd_admin(message)


def register_user_handlers(dp: Dispatcher):
    """Register user handlers"""
    dp.message.register(cmd_start, Command("start"))
    dp.message.register(cmd_help, Command("help"))
    dp.message.register(cmd_purchases, Command("purchases"))
    dp.message.register(cmd_support, Command("support"))
    dp.message.register(cmd_support, F.text == "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    dp.message.register(handle_admin_button, F.text == "üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

    # Inline button handlers
    dp.callback_query.register(handle_inline_buttons, F.data.in_([
        "back_to_menu", "my_purchases", "show_balance",
        "open_catalog", "back_to_categories"
    ]))